---
import { YouTube } from "@astro-community/astro-embed-youtube";

import DownloadLink from "../../components/DownloadLink.astro";
import MaterialDisplay from "../../components/MaterialDisplay.astro";
import PersonLink from "../../components/PersonLink.astro";
import SpotifyLink from "../../components/SpotifyLink.astro";
import { productions, materials } from "../../data";
import Layout from "../../layouts/Layout.astro";
import type { Material } from "../../types/Material";
import type { Production } from "../../types/Production";

export async function getStaticPaths() {
  return Object.values(materials).map((m) => ({
    params: { materialId: m.id },
    props: { material: m, production: productions[m.production] },
  }));
}

const { material, production } = Astro.props as {
  material: Material;
  production: Production;
};
---

<Layout title={`${production.name} ${production.year} - ${material.title}`}>
  <h1><MaterialDisplay materialId={material.id} iconSize={40} /></h1>

  <p>
    Opf√∏rt til <a href={`/productions/${production.id}`}
      >{production.name} {production.year}</a
    >
  </p>

  <dl>
    <dt>Skrevet af</dt>
    {material.authors.length === 0 && <dd>Ukendt</dd>}
    {
      material.authors.map((alias) => (
        <dd>
          <PersonLink aliasId={alias} />
        </dd>
      ))
    }
    <dt>Instrueret af</dt>
    {material.instructors.length === 0 && <dd>Ukendt</dd>}
    {
      material.instructors.map((alias) => (
        <dd>
          <PersonLink aliasId={alias} />
        </dd>
      ))
    }
  </dl>

  {
    material.roles.length > 0 && (
      <>
        <h2>Roller</h2>

        <ul class="roles">
          {material.roles.map((role) => (
            <li>
              [{role.abbr}]: {role.title} (<PersonLink aliasId={role.actor} />)
            </li>
          ))}
        </ul>
      </>
    )
  }

  {
    material.props.length > 0 && (
      <>
        <h2>Rekvisitter</h2>

        <ul>
          {material.props.map((prop) => (
            <li>
              [{prop.name}]: {prop.description} ({prop.responsible})
            </li>
          ))}
        </ul>
      </>
    )
  }

  <hr />

  <p>
    <DownloadLink location={material.pdfLocation}>Download PDF</DownloadLink>
    {material.meta.spotify && <SpotifyLink material={material} />}
  </p>

  {material.meta.youtube && <YouTube id={material.meta.youtube} />}

  <pre>{JSON.parse(material.rawTex)}</pre>
</Layout>

<style>
  .roles li {
    display: flex;
    align-items: center;
  }
</style>
